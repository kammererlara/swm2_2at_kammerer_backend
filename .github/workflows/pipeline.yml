---
name: Pipeline

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: read

jobs:
  conform:
    runs-on: ubuntu-latest
    name: Conform

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - uses: siderolabs/conform@v0.1.0-alpha.27
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  check-pmd:
    runs-on: ubuntu-latest
    name: Check PMD
    strategy:
      matrix:
        java-version: ["21"]

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4.5.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"

      - run: chmod +x ./gradlew
      - run: ./gradlew clean pmdMain pmdTest

  check-checkstyle:
    runs-on: ubuntu-latest
    name: Check Checkstyle
    strategy:
      matrix:
        java-version: ["21"]

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4.5.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"

      - run: chmod +x ./gradlew
      - run: ./gradlew clean checkstyleMain checkstyleTest

  test:
    runs-on: ubuntu-latest
    name: Unit Tests
    needs:
      - conform
      - check-pmd
      - check-checkstyle
    strategy:
      max-parallel: 4
      matrix:
        java-version: ["21"]

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4.5.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"

      - run: chmod +x ./gradlew
      - run: ./gradlew clean test
        env:
          SECRETS_AVWX_TOKEN: ${{ secrets.AVWX_TOKEN }}

  hadolint:
    runs-on: ubuntu-latest
    name: Lint Dockerfile

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  build:
    runs-on: ubuntu-latest
    name: Build Jar File
    needs:
      - test
    strategy:
      matrix:
        java-version: ["21"]

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4.5.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"

      - run: chmod +x ./gradlew
      - run: ./gradlew clean build
        env:
          SECRETS_AVWX_TOKEN: ${{ secrets.AVWX_TOKEN }}

      - uses: actions/upload-artifact@v4.4.3
        with:
          name: spring-boot-jar
          path: build/libs/*.jar

  container:
    runs-on: ubuntu-latest
    name: Container
    needs:
      - build
      - hadolint
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - uses: docker/setup-qemu-action@v3.2.0
      - uses: docker/setup-buildx-action@v3.7.1

      - uses: actions/download-artifact@v4.1.8
        with:
          name: spring-boot-jar
          path: build/libs/

      - uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6.9.0
        with:
          context: .
          tags: ghcr.io/${{ github.repository }}:latest
          push: ${{ github.ref == 'refs/heads/main' }}
