global:
  name: weather-backend
  namespace: default
  image: ghcr.io/kammererlara/swm2_2at_kammerer_backend
  port: 8080
  host: weather-backend.swm2-2at-kammerer.local.xyz

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: "{{ .Values.global.image }}"
  pullPolicy: IfNotPresent
  tag: latest

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: LoadBalancer
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: "{{ .Values.global.port }}"

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  host: "{{ .Values.global.host }}"

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10

secret:
  DB_HOST: ""
  DB_PORT: ""
  DB_NAME: ""
  DB_USERNAME: ""
  DB_PASSWORD: ""
  AVWX_TOKEN: ""