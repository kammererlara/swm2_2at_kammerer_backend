openapi: 3.0.1
info:
  title: OpenAPI Definition
  version: v100
  description: API for managing location favorites of individual users and retrieving their weather data
tags:
  - name: user
    description: User management
  - name: location
    description: Location management
  - name: favorite
    description: Favorite management
  - name: weather-forecast
    description: Fetching weather forecasts
paths:
  /users:
    get:
      tags:
        - user
      summary: Retrieve all users
      description: Returns a list of all users in the system
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
              example:
                - id: 1
                  firstname: Max
                  lastname: Mustermann
                - id: 2
                  firstname: Erika
                  lastname: Musterfrau
        "500":
          description: Internal server error
    post:
      tags:
        - user
      summary: Create user
      description: Creates a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
            example:
              firstname: Max
              lastname: Mustermann
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                id: 3
                firstname: Max
                lastname: Mustermann
        "400":
          description: User Max Mustermann does already exist on this bank
        "500":
          description: Internal server error
  /users/{id}:
    get:
      tags:
        - user
      summary: Retrieve user
      description: Retrieves a user by ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                id: 1
                firstname: Max
                lastname: Mustermann
        "400":
          description: User id must be greater than 0
        "404":
          description: Not found
        "500":
          description: Internal server error
    delete:
      tags:
        - user
      summary: Delete user
      description: Deletes a user by ID
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
        "400":
          description: User id must be greater than 1
        "404":
          description: Not found
        "500":
          description: Internal server error
  /locations:
    get:
      tags:
        - location
      summary: Retrieve all locations
      description: Returns a list of all locations in the system
      operationId: getAllLocations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Location"
              example:
                - id: 1
                  name: Berlin
                  latitude: 5252
                  longitude: 13405
                  elevation: 34
                  icao: EDDB
        "500":
          description: Internal server error
    post:
      tags:
        - location
      summary: Create location
      description: Creates a new location in the system
      operationId: createLocation
      parameters:
        - name: locationName
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
              example:
                id: 2
                name: Hamburg
                latitude: 535511
                longitude: 99937
                elevation: 10
                icao: EDDH
        "400":
          description: Location Hamburg does already exist
        "500":
          description: Internal server error
  /locations/{id}:
    get:
      tags:
        - location
      summary: Retrieve location
      description: Retrieves a location by ID
      operationId: getLocationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
              example:
                id: 1
                name: Berlin
                latitude: 5252
                longitude: 13405
                elevation: 34
                icao: EDDB
        "400":
          description: Location id must be greater than 0
        "404":
          description: Not found
        "500":
          description: Internal server error
    delete:
      tags:
        - location
      summary: Delete location
      description: Deletes a location by ID
      operationId: deleteLocation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Location deleted successfully
        "400":
          description: Location id must be greater than 0
        "404":
          description: Not found
        "500":
          description: Internal server error
  /favorites:
    get:
      tags:
        - favorite
      summary: Retrieve all favorites
      description: Returns a list of all favorites in the system
      operationId: getAllFavorites
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Favorite"
                example:
                  - id: 1
                    name: Home
                    location:
                      id: 1
                      name: Berlin
                      latitude: 5252
                      longitude: 13405
                      elevation: 34
                      icao: EDDB
                    user:
                      id: 1
                      firstname: Max
                      lastname: Mustermann
        "500":
          description: Internal server error
    post:
      tags:
        - favorite
      summary: Create favorite
      description: Creates a new favorite for a user and location
      operationId: createFavorite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Favorite"
            example:
              name: Home
              location:
                name: Berlin
              user:
                id: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Favorite"
              example:
                id: 1
                name: Home
                location:
                  id: 1
                  name: Berlin
                  latitude: 5252
                  longitude: 13405
                  elevation: 34
                  icao: EDDB
                user:
                  id: 1
                  firstname: Max
                  lastname: Mustermann
        "400":
          description: Invalid input, user ID must be greater than 0 or name and location are missing
        "500":
          description: Internal server error
  /favorites/{id}:
    get:
      tags:
        - favorite
      summary: Retrieve favorite
      description: Retrieves a favorite by ID
      operationId: getFavoriteById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Favorite"
              example:
                id: 1
                name: Home
                location:
                  id: 1
                  name: Berlin
                  latitude: 5252
                  longitude: 13405
                  elevation: 34
                  icao: EDDB
                user:
                  id: 1
                  firstname: Max
                  lastname: Mustermann
        "400":
          description: Favorite id must be greater than 0
        "404":
          description: Not found
        "500":
          description: Internal server error
    delete:
      tags:
        - favorite
      summary: Delete favorite
      description: Deletes a favorite by ID
      operationId: deleteFavorite
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Favorite deleted successfully
        "400":
          description: Favorite id must be greater than 0
        "404":
          description: Not found
        "500":
          description: Internal server error
  /favorites/user/{id}:
    get:
      tags:
        - favorite
      summary: Retrieve favorites by user ID
      description: Retrieves a list of favorites for a specific user
      operationId: getFavoritesByUserId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Favorite"
              example:
                - id: 1
                  name: Home
                  location:
                    id: 1
                    name: Berlin
                    latitude: 5252
                    longitude: 13405
                    elevation: 34
                    icao: EDDB
                  user:
                    id: 1
                    firstname: Max
                    lastname: Mustermann
        "400":
          description: User id must be greater than 0
        "404":
          description: Not found
        "500":
          description: Internal server error
  /weather/{favoriteId}:
    get:
      tags:
        - weather-forecast
      summary: Retrieve weather forecast
      description: Retrieves the weather forecast for the location of a specific favorite
      operationId: getWeatherForecastAtFavoriteLocation
      parameters:
        - name: favoriteId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                    temperature:
                      type: number
                    humidity:
                      type: number
              example:
                - timestamp: "2025-02-13T00:00:00"
                  temperature: -0.2
                  humidity: 90
                - timestamp: "2025-02-13T01:00:00"
                  temperature: -0.1
                  humidity: 91
                - timestamp: "2025-02-13T02:00:00"
                  temperature: 0.0
                  humidity: 90
                - timestamp: "2025-02-13T03:00:00"
                  temperature: 0.0
                  humidity: 91
                - timestamp: "2025-02-13T04:00:00"
                  temperature: 0.0
                  humidity: 92
                - timestamp: "2025-02-13T05:00:00"
                  temperature: 0.1
                  humidity: 93
                - timestamp: "2025-02-13T06:00:00"
                  temperature: 0.3
                  humidity: 89
                - timestamp: "2025-02-13T07:00:00"
                  temperature: 0.4
                  humidity: 94
                - timestamp: "2025-02-13T08:00:00"
                  temperature: 0.6
                  humidity: 93
                - timestamp: "2025-02-13T09:00:00"
                  temperature: 0.7
                  humidity: 91
                - timestamp: "2025-02-13T10:00:00"
                  temperature: 1.0
                  humidity: 89
                - timestamp: "2025-02-13T11:00:00"
                  temperature: 1.6
                  humidity: 85
                - timestamp: "2025-02-13T12:00:00"
                  temperature: 1.4
                  humidity: 88
                - timestamp: "2025-02-13T13:00:00"
                  temperature: 1.9
                  humidity: 87
                - timestamp: "2025-02-13T14:00:00"
                  temperature: 2.3
                  humidity: 85
                - timestamp: "2025-02-13T15:00:00"
                  temperature: 1.9
                  humidity: 87
                - timestamp: "2025-02-13T16:00:00"
                  temperature: 1.9
                  humidity: 88
                - timestamp: "2025-02-13T17:00:00"
                  temperature: 1.9
                  humidity: 89
                - timestamp: "2025-02-13T18:00:00"
                  temperature: 1.7
                  humidity: 90
                - timestamp: "2025-02-13T19:00:00"
                  temperature: 1.9
                  humidity: 89
                - timestamp: "2025-02-13T20:00:00"
                  temperature: 1.9
                  humidity: 89
                - timestamp: "2025-02-13T21:00:00"
                  temperature: 2.2
                  humidity: 87
                - timestamp: "2025-02-13T22:00:00"
                  temperature: 2.4
                  humidity: 86
                - timestamp: "2025-02-13T23:00:00"
                  temperature: 2.9
                  humidity: 84
        "400":
          description: Favorite id must be greater than 0
        "404":
          description: Not found
        "500":
          description: Internal server error
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        firstname:
          type: string
        lastname:
          type: string
    Favorite:
      type: object
      properties:
        id:
          type: integer
        user:
          $ref: "#/components/schemas/User"
        name:
          type: string
        location:
          $ref: "#/components/schemas/Location"
    Location:
      type: object
      properties:
        id:
          type: integer
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        elevation:
          type: number
          format: double
        name:
          type: string
        icao:
          type: string
